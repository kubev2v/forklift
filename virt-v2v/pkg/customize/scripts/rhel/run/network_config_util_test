#!/bin/bash

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

PASS() { echo "PASS: $@" ; }
FAIL() { echo "FAIL: $@" ; }

test_in_dir() {
export TEST_DIR=$(mktemp -d --suffix="-forklift")

# Paths for the test
export V2V_MAP_FILE="$TEST_DIR/tmp/macToIP"
export NETWORK_SCRIPTS_DIR="$TEST_DIR/etc/sysconfig/network-scripts"
export NETWORK_CONNECTIONS_DIR="$TEST_DIR/etc/NetworkManager/system-connections"
export UDEV_RULES_FILE="$TEST_DIR/etc/udev/rules.d/70-persistent-net.rules"
export NETPLAN_DIR="$TEST_DIR/etc/netplan"

    export TEST_SRC_DIR=$1  #${SCRIPT_DIR}/ifcfg-test.d
    export EXPECTED_UDEV_RULE_FILE="$TEST_SRC_DIR/expected-udev.rule"

export IN_TESTING=true
    echo "Testing: $1"

    cp -a $TEST_SRC_DIR/root/* $TEST_DIR

    # Clean up from previous runs
    rm -f "$UDEV_RULES_FILE"
    mkdir -p $(dirname "$UDEV_RULES_FILE")

    # Source the script under test
    {
    . ${SCRIPT_DIR}/network_config_util.sh
    } > $TEST_DIR/main.log 2>&1

    # Test 1: Verify the udev rules file was created
    if [ ! -f "$UDEV_RULES_FILE" ]; then
        echo "Test 1 Failed: UDEV_RULES_FILE not created."
        cat $TEST_DIR/main.log
        exit 1
    fi

    if ! cmp -s $EXPECTED_UDEV_RULE_FILE $UDEV_RULES_FILE ; then
        echo "Test 2 Failed: The content of $UDEV_RULES_FILE does not match the expected rule."
        cat $UDEV_RULES_FILE
        diff -u $EXPECTED_UDEV_RULE_FILE $UDEV_RULES_FILE
        cat $TEST_DIR/main.log
        exit 1
    fi

    PASS $TEST_SRC_DIR
    rm -rf "$TEST_DIR"
}

test_glob_dirs() {
    for THE_DIR in $@;
    do
        test_in_dir "$THE_DIR"
    done
}


# Test systems using network-scripts
# ----------------------------------
test_glob_dirs ${SCRIPT_DIR}/ifcfg-*-test.d;

# Test systems using system-connections
# -------------------------------------
test_glob_dirs ${SCRIPT_DIR}/networkmanager*-test.d;

# Test systems using netplan YAML
# -------------------------------
test_glob_dirs ${SCRIPT_DIR}/netplan*-test.d;
