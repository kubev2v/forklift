// Code generated by MockGen. DO NOT EDIT.
// Source: embed_tool.go

// Package customize is a generated GoMock package.
package customize

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockEmbedTool is a mock of EmbedTool interface.
type MockEmbedTool struct {
	ctrl     *gomock.Controller
	recorder *MockEmbedToolMockRecorder
}

// MockEmbedToolMockRecorder is the mock recorder for MockEmbedTool.
type MockEmbedToolMockRecorder struct {
	mock *MockEmbedTool
}

// NewMockEmbedTool creates a new mock instance.
func NewMockEmbedTool(ctrl *gomock.Controller) *MockEmbedTool {
	mock := &MockEmbedTool{ctrl: ctrl}
	mock.recorder = &MockEmbedToolMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmbedTool) EXPECT() *MockEmbedToolMockRecorder {
	return m.recorder
}

// CreateFilesFromFS mocks base method.
func (m *MockEmbedTool) CreateFilesFromFS(dstDir string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFilesFromFS", dstDir)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFilesFromFS indicates an expected call of CreateFilesFromFS.
func (mr *MockEmbedToolMockRecorder) CreateFilesFromFS(dstDir interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFilesFromFS", reflect.TypeOf((*MockEmbedTool)(nil).CreateFilesFromFS), dstDir)
}
