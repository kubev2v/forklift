// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// VscanScannerDeleteReader is a Reader for the VscanScannerDelete structure.
type VscanScannerDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VscanScannerDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVscanScannerDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVscanScannerDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVscanScannerDeleteOK creates a VscanScannerDeleteOK with default headers values
func NewVscanScannerDeleteOK() *VscanScannerDeleteOK {
	return &VscanScannerDeleteOK{}
}

/*
VscanScannerDeleteOK describes a response with status code 200, with default header values.

OK
*/
type VscanScannerDeleteOK struct {
}

// IsSuccess returns true when this vscan scanner delete o k response has a 2xx status code
func (o *VscanScannerDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this vscan scanner delete o k response has a 3xx status code
func (o *VscanScannerDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this vscan scanner delete o k response has a 4xx status code
func (o *VscanScannerDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this vscan scanner delete o k response has a 5xx status code
func (o *VscanScannerDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this vscan scanner delete o k response a status code equal to that given
func (o *VscanScannerDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *VscanScannerDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /protocols/vscan/{svm.uuid}/scanner-pools/{name}][%d] vscanScannerDeleteOK ", 200)
}

func (o *VscanScannerDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /protocols/vscan/{svm.uuid}/scanner-pools/{name}][%d] vscanScannerDeleteOK ", 200)
}

func (o *VscanScannerDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVscanScannerDeleteDefault creates a VscanScannerDeleteDefault with default headers values
func NewVscanScannerDeleteDefault(code int) *VscanScannerDeleteDefault {
	return &VscanScannerDeleteDefault{
		_statusCode: code,
	}
}

/*
	VscanScannerDeleteDefault describes a response with status code -1, with default header values.

	ONTAP Error Response Codes

| Error Code | Description |
| ---------- | ----------- |
| 10027070   | Attempting to delete a scanner-pool but it is the only active scanner-pool for a Vscan enabled on the SVM
| 10027064   | Attempting to delete a scanner-pool with a data SVM which was created with an administrative SVM
*/
type VscanScannerDeleteDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the vscan scanner delete default response
func (o *VscanScannerDeleteDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this vscan scanner delete default response has a 2xx status code
func (o *VscanScannerDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this vscan scanner delete default response has a 3xx status code
func (o *VscanScannerDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this vscan scanner delete default response has a 4xx status code
func (o *VscanScannerDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this vscan scanner delete default response has a 5xx status code
func (o *VscanScannerDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this vscan scanner delete default response a status code equal to that given
func (o *VscanScannerDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *VscanScannerDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /protocols/vscan/{svm.uuid}/scanner-pools/{name}][%d] vscan_scanner_delete default  %+v", o._statusCode, o.Payload)
}

func (o *VscanScannerDeleteDefault) String() string {
	return fmt.Sprintf("[DELETE /protocols/vscan/{svm.uuid}/scanner-pools/{name}][%d] vscan_scanner_delete default  %+v", o._statusCode, o.Payload)
}

func (o *VscanScannerDeleteDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *VscanScannerDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
