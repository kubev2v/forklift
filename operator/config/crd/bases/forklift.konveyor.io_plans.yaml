---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: plans.forklift.konveyor.io
spec:
  group: forklift.konveyor.io
  names:
    kind: Plan
    listKind: PlanList
    plural: plans
    singular: plan
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Executing')].status
      name: EXECUTING
      type: string
    - jsonPath: .status.conditions[?(@.type=='Succeeded')].status
      name: SUCCEEDED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Failed')].status
      name: FAILED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PlanSpec defines the desired state of Plan.
            properties:
              archived:
                description: Whether this plan should be archived.
                type: boolean
              deleteGuestConversionPod:
                description: |-
                  DeleteGuestConversionPod determines if the guest conversion pod should be deleted after successful migration.
                  Note:
                    - If this option is enabled and migration succeeds then the pod will get deleted. However the VM could still not boot and the virt-v2v logs, with additional information, will be deleted alongside guest conversion pod.
                    - If migration fails the conversion pod will remain present even if this option is enabled.
                type: boolean
              description:
                description: Description
                type: string
              diskBus:
                description: 'Deprecated: this field will be deprecated in 2.8.'
                type: string
              installLegacyDrivers:
                description: |-
                  InstallLegacyDrivers determines whether to install legacy windows drivers in the VM.
                  The following Vm's are lack of SHA-2 support and need legacy drivers:
                  Windows XP (all)
                  Windows Server 2003
                  Windows Vista (all)
                  Windows Server 2008
                  Windows 7 (pre-SP1)
                  Windows Server 2008 R2
                  Behavior:
                  - If set to nil (unset), the system will automatically detect whether the VM requires legacy drivers
                    based on its guest OS type (using IsLegacyWindows).
                  - If set to true, legacy drivers will be installed unconditionally by setting the VIRTIO_WIN environment variable.
                  - If set to false, legacy drivers will be skipped, and the system will fall back to using the standard (SHA-2 signed) drivers.

                  When enabled, legacy drivers are exposed to the virt-v2v conversion process via the VIRTIO_WIN environment variable,
                  which points to the legacy ISO at /usr/local/virtio-win.iso.
                type: boolean
              map:
                description: Resource mapping.
                properties:
                  network:
                    description: Network.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  storage:
                    description: Storage.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - network
                - storage
                type: object
              migrateSharedDisks:
                default: true
                description: Determines if the plan should migrate shared disks.
                type: boolean
              networkNameTemplate:
                description: |-
                  NetworkNameTemplate is a template for generating network interface names in the target virtual machine.
                  It follows Go template syntax and has access to the following variables:
                    - .NetworkName: If target network is multus, name of the Multus network attachment definition, empty otherwise.
                    - .NetworkNamespace: If target network is multus, namespace where the network attachment definition is located.
                    - .NetworkType: type of the network ("Multus" or "Pod")
                    - .NetworkIndex: sequential index of the network interface (0-based)
                  The template can be used to customize network interface names based on target network configuration.
                  Note:
                    - This template can be overridden at the individual VM level
                    - If not specified on VM level and on Plan leverl, default naming conventions will be used
                  Examples:
                    "net-{{.NetworkIndex}}"
                    "{{if eq .NetworkType "Pod"}}pod{{else}}multus-{{.NetworkIndex}}{{end}}"
                type: string
              preserveClusterCpuModel:
                description: Preserve the CPU model and flags the VM runs with in
                  its oVirt cluster.
                type: boolean
              preserveStaticIPs:
                description: Preserve static IPs of VMs in vSphere
                type: boolean
              provider:
                description: Providers.
                properties:
                  destination:
                    description: Destination.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  source:
                    description: Source.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - destination
                - source
                type: object
              pvcNameTemplate:
                description: |-
                  PVCNameTemplate is a template for generating PVC names for VM disks.
                  It follows Go template syntax and has access to the following variables:
                    - .VmName: name of the VM
                    - .PlanName: name of the migration plan
                    - .DiskIndex: initial volume index of the disk
                    - .WinDriveLetter: Windows drive letter (lower case, if applicable, e.g. "c", require guest agent)
                    - .RootDiskIndex: index of the root disk
                    - .Shared: true if the volume is shared by multiple VMs, false otherwise
                    - .FileName: name of the file in the source provider (vmWare only, require guest agent)
                  Note:
                    This template can be overridden at the individual VM level.
                  Examples:
                    "{{.VmName}}-disk-{{.DiskIndex}}"
                    "{{if eq .DiskIndex .RootDiskIndex}}root{{else}}data{{end}}-{{.DiskIndex}}"
                    "{{if .Shared}}shared-{{end}}{{.VmName}}-{{.DiskIndex}}"
                type: string
              pvcNameTemplateUseGenerateName:
                default: true
                description: |-
                  PVCNameTemplateUseGenerateName indicates if the PVC name template should use generateName instead of name.
                  Setting this to false will use the name field of the PVCNameTemplate.
                  This is useful when using a template that generates a name without a suffix.
                  For example, if the template is "{{.VmName}}-disk-{{.DiskIndex}}", setting this to false will result in
                  the PVC name being "{{.VmName}}-disk-{{.DiskIndex}}", which may not be unique.
                  but will be more predictable.
                  **DANGER** When set to false, the generated PVC name may not be unique and may cause conflicts.
                type: boolean
              skipGuestConversion:
                default: false
                description: Determines if the plan should skip the guest conversion.
                type: boolean
              targetAffinity:
                description: |-
                  TargetAffinity allows specifying hard- and soft-affinity for VMs.
                  it is possible to write matching rules against workloads (VMs and Pods) and Nodes.
                  Since VMs are a workload type based on Pods, Pod-affinity affects VMs as well.
                  See virtual machine instance Affinity documentation for more details,
                  https://kubevirt.io/user-guide/compute/node_assignment/#affinity-and-anti-affinity
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: |-
                            An empty preferred scheduling term matches all objects with implicit weight 0
                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to an update), the system
                          may or may not try to eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: |-
                                A null or empty node selector term matches no objects. The requirements of
                                them are ANDed.
                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: |-
                                A label query over a set of resources, in this case pods.
                                If it's null, this PodAffinityTerm matches with no Pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchLabelKeys:
                              description: |-
                                MatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            mismatchLabelKeys:
                              description: |-
                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the anti-affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the anti-affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the anti-affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: |-
                                A label query over a set of resources, in this case pods.
                                If it's null, this PodAffinityTerm matches with no Pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchLabelKeys:
                              description: |-
                                MatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            mismatchLabelKeys:
                              description: |-
                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                type: object
              targetLabels:
                additionalProperties:
                  type: string
                description: |-
                  TargetLabels are labels that should be applied to the target virtual machines.
                  See Pod Labels documentation for more details,
                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#labels
                type: object
              targetNamespace:
                description: Target namespace.
                type: string
              targetNodeSelector:
                additionalProperties:
                  type: string
                description: |-
                  TargetNodeSelector, constrains the scheduler to only schedule VMs on nodes,
                  which contain the specified labels.
                  See virtual machine instance NodeSelector documentation for more details,
                  https://kubevirt.io/user-guide/compute/node_assignment/#nodeselector
                type: object
              targetPowerState:
                description: |-
                  TargetPowerState specifies the desired power state of the target VM after migration.
                  - "on": Target VM will be powered on after migration
                  - "off": Target VM will be powered off after migration
                  - "auto" or nil (default): Target VM will match the source VM's power state
                enum:
                - "on"
                - "off"
                - auto
                type: string
              transferNetwork:
                description: The network attachment definition that should be used
                  for disk transfer.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              type:
                description: Migration type. e.g. "cold", "warm", "live". Supersedes
                  the `warm` boolean if set.
                enum:
                - cold
                - warm
                - live
                type: string
              useCompatibilityMode:
                default: true
                description: |-
                  useCompatibilityMode controls whether to use VirtIO devices when skipGuestConversion is true (Raw Copy mode).
                  This setting has no effect when skipGuestConversion is false (V2V Conversion always uses VirtIO).
                  - true (default): Use compatibility devices (SATA bus, E1000E NIC) to ensure bootability
                  - false: Use high-performance VirtIO devices (requires VirtIO drivers already installed in source VM)
                type: boolean
              vms:
                description: List of VMs.
                items:
                  description: A VM listed on the plan.
                  properties:
                    hooks:
                      description: Enable hooks.
                      items:
                        description: Plan hook.
                        properties:
                          hook:
                            description: Hook reference.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: |-
                                  If referring to a piece of an object instead of an entire object, this string
                                  should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container within a pod, this would take on a value like:
                                  "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                  the event) or if no container name is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                  referencing a part of an object.
                                type: string
                              kind:
                                description: |-
                                  Kind of the referent.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                type: string
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              namespace:
                                description: |-
                                  Namespace of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                type: string
                              resourceVersion:
                                description: |-
                                  Specific resourceVersion to which this reference is made, if any.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              uid:
                                description: |-
                                  UID of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          step:
                            description: Pipeline step.
                            type: string
                        required:
                        - hook
                        - step
                        type: object
                      type: array
                    id:
                      description: |-
                        The object ID.
                        vsphere:
                          The managed object ID.
                      type: string
                    instanceType:
                      description: Selected InstanceType that will override the VM
                        properties.
                      type: string
                    luks:
                      description: Disk decryption LUKS keys
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        An object Name.
                        vsphere:
                          A qualified name.
                      type: string
                    namespace:
                      description: |-
                        The VM Namespace
                        Only relevant for an openshift source.
                      type: string
                    networkNameTemplate:
                      description: |-
                        NetworkNameTemplate is a template for generating network interface names in the target virtual machine.
                        It follows Go template syntax and has access to the following variables:
                          - .NetworkName: If target network is multus, name of the Multus network attachment definition, empty otherwise.
                          - .NetworkNamespace: If target network is multus, namespace where the network attachment definition is located.
                          - .NetworkType: type of the network ("Multus" or "Pod")
                          - .NetworkIndex: sequential index of the network interface (0-based)
                        The template can be used to customize network interface names based on target network configuration.
                        Note:
                          - This template will override at the plan level template
                          - If not specified on VM level and on Plan leverl, default naming conventions will be used
                        Examples:
                          "net-{{.NetworkIndex}}"
                          "{{if eq .NetworkType "Pod"}}pod{{else}}multus-{{.NetworkIndex}}{{end}}"
                      type: string
                    pvcNameTemplate:
                      description: |-
                        PVCNameTemplate is a template for generating PVC names for VM disks.
                        It follows Go template syntax and has access to the following variables:
                          - .VmName: name of the VM
                          - .PlanName: name of the migration plan
                          - .DiskIndex: initial volume index of the disk
                          - .RootDiskIndex: index of the root disk
                          - .Shared: true if the volume is shared by multiple VMs, false otherwise
                        Note:
                          This template overrides the plan level template.
                        Examples:
                          "{{.VmName}}-disk-{{.DiskIndex}}"
                          "{{if eq .DiskIndex .RootDiskIndex}}root{{else}}data{{end}}-{{.DiskIndex}}"
                          "{{if .Shared}}shared-{{end}}{{.VmName}}-{{.DiskIndex}}"
                      type: string
                    rootDisk:
                      description: Choose the primary disk the VM boots from
                      type: string
                    targetName:
                      description: |-
                        TargetName specifies a custom name for the VM in the target cluster.
                        If not provided, the original VM name will be used and automatically adjusted to meet k8s DNS1123 requirements.
                        If provided, this exact name will be used instead. The migration will fail if the name is not unique or already in use.
                      type: string
                    targetPowerState:
                      description: |-
                        TargetPowerState specifies the desired power state of the target VM after migration.
                        - "on": Target VM will be powered on after migration
                        - "off": Target VM will be powered off after migration
                        - "auto" or nil (default): Target VM will match the source VM's power state
                      enum:
                      - "on"
                      - "off"
                      - auto
                      type: string
                    type:
                      description: Type used to qualify the name.
                      type: string
                    volumeNameTemplate:
                      description: |-
                        VolumeNameTemplate is a template for generating volume interface names in the target virtual machine.
                        It follows Go template syntax and has access to the following variables:
                          - .PVCName: name of the PVC mounted to the VM using this volume
                          - .VolumeIndex: sequential index of the volume interface (0-based)
                        Note:
                          - This template will override at the plan level template
                          - If not specified on VM level and on Plan leverl, default naming conventions will be used
                        Examples:
                          "disk-{{.VolumeIndex}}"
                          "pvc-{{.PVCName}}"
                      type: string
                  type: object
                type: array
              volumeNameTemplate:
                description: |-
                  VolumeNameTemplate is a template for generating volume interface names in the target virtual machine.
                  It follows Go template syntax and has access to the following variables:
                    - .PVCName: name of the PVC mounted to the VM using this volume
                    - .VolumeIndex: sequential index of the volume interface (0-based)
                  Note:
                    - This template can be overridden at the individual VM level
                    - If not specified on VM level and on Plan leverl, default naming conventions will be used
                  Examples:
                    "disk-{{.VolumeIndex}}"
                    "pvc-{{.PVCName}}"
                type: string
              warm:
                description: Whether this is a warm migration.
                type: boolean
            required:
            - map
            - provider
            - targetNamespace
            - vms
            type: object
          status:
            description: PlanStatus defines the observed state of Plan.
            properties:
              conditions:
                description: List of conditions.
                items:
                  description: Condition
                  properties:
                    category:
                      description: The condition category.
                      type: string
                    durable:
                      description: The condition is durable - never un-staged.
                      type: boolean
                    items:
                      description: A list of items referenced in the `Message`.
                      items:
                        type: string
                      type: array
                    lastTransitionTime:
                      description: When the last status transition occurred.
                      format: date-time
                      type: string
                    message:
                      description: The human readable description of the condition.
                      type: string
                    reason:
                      description: The reason for the condition or transition.
                      type: string
                    status:
                      description: The condition status [true,false].
                      type: string
                    type:
                      description: The condition type.
                      type: string
                  required:
                  - category
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              migration:
                description: Migration
                properties:
                  completed:
                    description: Completed timestamp.
                    format: date-time
                    type: string
                  history:
                    description: History
                    items:
                      description: Snapshot
                      properties:
                        conditions:
                          description: List of conditions.
                          items:
                            description: Condition
                            properties:
                              category:
                                description: The condition category.
                                type: string
                              durable:
                                description: The condition is durable - never un-staged.
                                type: boolean
                              items:
                                description: A list of items referenced in the `Message`.
                                items:
                                  type: string
                                type: array
                              lastTransitionTime:
                                description: When the last status transition occurred.
                                format: date-time
                                type: string
                              message:
                                description: The human readable description of the
                                  condition.
                                type: string
                              reason:
                                description: The reason for the condition or transition.
                                type: string
                              status:
                                description: The condition status [true,false].
                                type: string
                              type:
                                description: The condition type.
                                type: string
                            required:
                            - category
                            - lastTransitionTime
                            - status
                            - type
                            type: object
                          type: array
                        map:
                          description: Map.
                          properties:
                            network:
                              description: Snapshot object reference.
                              properties:
                                generation:
                                  format: int64
                                  type: integer
                                name:
                                  type: string
                                namespace:
                                  type: string
                                uid:
                                  description: |-
                                    UID is a type that holds unique ID values, including UUIDs.  Because we
                                    don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                                    intent and helps make sure that UIDs and names do not get conflated.
                                  type: string
                              required:
                              - generation
                              - name
                              - namespace
                              - uid
                              type: object
                            storage:
                              description: Snapshot object reference.
                              properties:
                                generation:
                                  format: int64
                                  type: integer
                                name:
                                  type: string
                                namespace:
                                  type: string
                                uid:
                                  description: |-
                                    UID is a type that holds unique ID values, including UUIDs.  Because we
                                    don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                                    intent and helps make sure that UIDs and names do not get conflated.
                                  type: string
                              required:
                              - generation
                              - name
                              - namespace
                              - uid
                              type: object
                          required:
                          - network
                          - storage
                          type: object
                        migration:
                          description: Migration
                          properties:
                            generation:
                              format: int64
                              type: integer
                            name:
                              type: string
                            namespace:
                              type: string
                            uid:
                              description: |-
                                UID is a type that holds unique ID values, including UUIDs.  Because we
                                don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                                intent and helps make sure that UIDs and names do not get conflated.
                              type: string
                          required:
                          - generation
                          - name
                          - namespace
                          - uid
                          type: object
                        plan:
                          description: Plan
                          properties:
                            generation:
                              format: int64
                              type: integer
                            name:
                              type: string
                            namespace:
                              type: string
                            uid:
                              description: |-
                                UID is a type that holds unique ID values, including UUIDs.  Because we
                                don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                                intent and helps make sure that UIDs and names do not get conflated.
                              type: string
                          required:
                          - generation
                          - name
                          - namespace
                          - uid
                          type: object
                        provider:
                          description: Provider
                          properties:
                            destination:
                              description: Snapshot object reference.
                              properties:
                                generation:
                                  format: int64
                                  type: integer
                                name:
                                  type: string
                                namespace:
                                  type: string
                                uid:
                                  description: |-
                                    UID is a type that holds unique ID values, including UUIDs.  Because we
                                    don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                                    intent and helps make sure that UIDs and names do not get conflated.
                                  type: string
                              required:
                              - generation
                              - name
                              - namespace
                              - uid
                              type: object
                            source:
                              description: Snapshot object reference.
                              properties:
                                generation:
                                  format: int64
                                  type: integer
                                name:
                                  type: string
                                namespace:
                                  type: string
                                uid:
                                  description: |-
                                    UID is a type that holds unique ID values, including UUIDs.  Because we
                                    don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                                    intent and helps make sure that UIDs and names do not get conflated.
                                  type: string
                              required:
                              - generation
                              - name
                              - namespace
                              - uid
                              type: object
                          required:
                          - destination
                          - source
                          type: object
                      required:
                      - map
                      - migration
                      - plan
                      - provider
                      type: object
                    type: array
                  started:
                    description: Started timestamp.
                    format: date-time
                    type: string
                  vms:
                    description: VM status
                    items:
                      description: VM Status
                      properties:
                        completed:
                          description: Completed timestamp.
                          format: date-time
                          type: string
                        conditions:
                          description: List of conditions.
                          items:
                            description: Condition
                            properties:
                              category:
                                description: The condition category.
                                type: string
                              durable:
                                description: The condition is durable - never un-staged.
                                type: boolean
                              items:
                                description: A list of items referenced in the `Message`.
                                items:
                                  type: string
                                type: array
                              lastTransitionTime:
                                description: When the last status transition occurred.
                                format: date-time
                                type: string
                              message:
                                description: The human readable description of the
                                  condition.
                                type: string
                              reason:
                                description: The reason for the condition or transition.
                                type: string
                              status:
                                description: The condition status [true,false].
                                type: string
                              type:
                                description: The condition type.
                                type: string
                            required:
                            - category
                            - lastTransitionTime
                            - status
                            - type
                            type: object
                          type: array
                        error:
                          description: Errors
                          properties:
                            phase:
                              type: string
                            reasons:
                              items:
                                type: string
                              type: array
                          required:
                          - phase
                          - reasons
                          type: object
                        firmware:
                          description: The firmware type detected from the OVF file
                            produced by virt-v2v.
                          type: string
                        hooks:
                          description: Enable hooks.
                          items:
                            description: Plan hook.
                            properties:
                              hook:
                                description: Hook reference.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: |-
                                      If referring to a piece of an object instead of an entire object, this string
                                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                      For example, if the object reference is to a container within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                      the event) or if no container name is specified "spec.containers[2]" (container with
                                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                      referencing a part of an object.
                                    type: string
                                  kind:
                                    description: |-
                                      Kind of the referent.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                    type: string
                                  resourceVersion:
                                    description: |-
                                      Specific resourceVersion to which this reference is made, if any.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                    type: string
                                  uid:
                                    description: |-
                                      UID of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              step:
                                description: Pipeline step.
                                type: string
                            required:
                            - hook
                            - step
                            type: object
                          type: array
                        id:
                          description: |-
                            The object ID.
                            vsphere:
                              The managed object ID.
                          type: string
                        instanceType:
                          description: Selected InstanceType that will override the
                            VM properties.
                          type: string
                        luks:
                          description: Disk decryption LUKS keys
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        name:
                          description: |-
                            An object Name.
                            vsphere:
                              A qualified name.
                          type: string
                        namespace:
                          description: |-
                            The VM Namespace
                            Only relevant for an openshift source.
                          type: string
                        networkNameTemplate:
                          description: |-
                            NetworkNameTemplate is a template for generating network interface names in the target virtual machine.
                            It follows Go template syntax and has access to the following variables:
                              - .NetworkName: If target network is multus, name of the Multus network attachment definition, empty otherwise.
                              - .NetworkNamespace: If target network is multus, namespace where the network attachment definition is located.
                              - .NetworkType: type of the network ("Multus" or "Pod")
                              - .NetworkIndex: sequential index of the network interface (0-based)
                            The template can be used to customize network interface names based on target network configuration.
                            Note:
                              - This template will override at the plan level template
                              - If not specified on VM level and on Plan leverl, default naming conventions will be used
                            Examples:
                              "net-{{.NetworkIndex}}"
                              "{{if eq .NetworkType "Pod"}}pod{{else}}multus-{{.NetworkIndex}}{{end}}"
                          type: string
                        newName:
                          description: The new name of the VM after matching DNS1123
                            requirements.
                          type: string
                        operatingSystem:
                          description: The Operating System detected by virt-v2v.
                          type: string
                        phase:
                          description: Phase
                          type: string
                        pipeline:
                          description: Migration pipeline.
                          items:
                            description: Pipeline step.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations.
                                type: object
                              completed:
                                description: Completed timestamp.
                                format: date-time
                                type: string
                              description:
                                description: Name
                                type: string
                              error:
                                description: Error.
                                properties:
                                  phase:
                                    type: string
                                  reasons:
                                    items:
                                      type: string
                                    type: array
                                required:
                                - phase
                                - reasons
                                type: object
                              name:
                                description: Name.
                                type: string
                              phase:
                                description: Phase
                                type: string
                              progress:
                                description: Progress.
                                properties:
                                  completed:
                                    description: Completed units.
                                    format: int64
                                    type: integer
                                  total:
                                    description: Total units.
                                    format: int64
                                    type: integer
                                required:
                                - completed
                                - total
                                type: object
                              reason:
                                description: Reason
                                type: string
                              started:
                                description: Started timestamp.
                                format: date-time
                                type: string
                              tasks:
                                description: Nested tasks.
                                items:
                                  description: Migration task.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations.
                                      type: object
                                    completed:
                                      description: Completed timestamp.
                                      format: date-time
                                      type: string
                                    description:
                                      description: Name
                                      type: string
                                    error:
                                      description: Error.
                                      properties:
                                        phase:
                                          type: string
                                        reasons:
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - phase
                                      - reasons
                                      type: object
                                    name:
                                      description: Name.
                                      type: string
                                    phase:
                                      description: Phase
                                      type: string
                                    progress:
                                      description: Progress.
                                      properties:
                                        completed:
                                          description: Completed units.
                                          format: int64
                                          type: integer
                                        total:
                                          description: Total units.
                                          format: int64
                                          type: integer
                                      required:
                                      - completed
                                      - total
                                      type: object
                                    reason:
                                      description: Reason
                                      type: string
                                    started:
                                      description: Started timestamp.
                                      format: date-time
                                      type: string
                                  required:
                                  - name
                                  - progress
                                  type: object
                                type: array
                            required:
                            - name
                            - progress
                            type: object
                          type: array
                        pvcNameTemplate:
                          description: |-
                            PVCNameTemplate is a template for generating PVC names for VM disks.
                            It follows Go template syntax and has access to the following variables:
                              - .VmName: name of the VM
                              - .PlanName: name of the migration plan
                              - .DiskIndex: initial volume index of the disk
                              - .RootDiskIndex: index of the root disk
                              - .Shared: true if the volume is shared by multiple VMs, false otherwise
                            Note:
                              This template overrides the plan level template.
                            Examples:
                              "{{.VmName}}-disk-{{.DiskIndex}}"
                              "{{if eq .DiskIndex .RootDiskIndex}}root{{else}}data{{end}}-{{.DiskIndex}}"
                              "{{if .Shared}}shared-{{end}}{{.VmName}}-{{.DiskIndex}}"
                          type: string
                        restorePowerState:
                          description: Source VM power state before migration.
                          type: string
                        rootDisk:
                          description: Choose the primary disk the VM boots from
                          type: string
                        started:
                          description: Started timestamp.
                          format: date-time
                          type: string
                        targetName:
                          description: |-
                            TargetName specifies a custom name for the VM in the target cluster.
                            If not provided, the original VM name will be used and automatically adjusted to meet k8s DNS1123 requirements.
                            If provided, this exact name will be used instead. The migration will fail if the name is not unique or already in use.
                          type: string
                        targetPowerState:
                          description: |-
                            TargetPowerState specifies the desired power state of the target VM after migration.
                            - "on": Target VM will be powered on after migration
                            - "off": Target VM will be powered off after migration
                            - "auto" or nil (default): Target VM will match the source VM's power state
                          enum:
                          - "on"
                          - "off"
                          - auto
                          type: string
                        type:
                          description: Type used to qualify the name.
                          type: string
                        volumeNameTemplate:
                          description: |-
                            VolumeNameTemplate is a template for generating volume interface names in the target virtual machine.
                            It follows Go template syntax and has access to the following variables:
                              - .PVCName: name of the PVC mounted to the VM using this volume
                              - .VolumeIndex: sequential index of the volume interface (0-based)
                            Note:
                              - This template will override at the plan level template
                              - If not specified on VM level and on Plan leverl, default naming conventions will be used
                            Examples:
                              "disk-{{.VolumeIndex}}"
                              "pvc-{{.PVCName}}"
                          type: string
                        warm:
                          description: Warm migration status
                          properties:
                            consecutiveFailures:
                              type: integer
                            failures:
                              type: integer
                            nextPrecopyAt:
                              format: date-time
                              type: string
                            precopies:
                              items:
                                description: Precopy durations
                                properties:
                                  createTaskId:
                                    type: string
                                  deltas:
                                    items:
                                      properties:
                                        deltaId:
                                          type: string
                                        disk:
                                          type: string
                                      required:
                                      - deltaId
                                      - disk
                                      type: object
                                    type: array
                                  end:
                                    format: date-time
                                    type: string
                                  removeTaskId:
                                    type: string
                                  snapshot:
                                    type: string
                                  start:
                                    format: date-time
                                    type: string
                                type: object
                              type: array
                            successes:
                              type: integer
                          required:
                          - consecutiveFailures
                          - failures
                          - successes
                          type: object
                      required:
                      - phase
                      - pipeline
                      type: object
                    type: array
                type: object
              observedGeneration:
                description: The most recent generation observed by the controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
