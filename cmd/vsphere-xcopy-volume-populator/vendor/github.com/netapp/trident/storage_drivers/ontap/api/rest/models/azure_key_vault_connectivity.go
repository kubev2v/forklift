// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AzureKeyVaultConnectivity Indicates whether or not the AKV service is reachable from all the nodes in the cluster.
// This is an advanced property; there is an added computational cost to retrieving its value. The property is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter or GET for all advanced properties is enabled.
//
// swagger:model azure_key_vault_connectivity
type AzureKeyVaultConnectivity struct {

	// Code corresponding to the status message. Returns a 0 if AKV service is reachable from all nodes in the cluster.
	// Example: 346758
	Code *string `json:"code,omitempty"`

	// Error message set when reachability is false.
	// Example: AKV service is not reachable from all nodes - reason.
	Message *string `json:"message,omitempty"`

	// Set to true when the AKV service is reachable from all nodes of the cluster.
	Reachable *bool `json:"reachable,omitempty"`
}

// Validate validates this azure key vault connectivity
func (m *AzureKeyVaultConnectivity) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure key vault connectivity based on context it is used
func (m *AzureKeyVaultConnectivity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureKeyVaultConnectivity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureKeyVaultConnectivity) UnmarshalBinary(b []byte) error {
	var res AzureKeyVaultConnectivity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
