// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CifsDomainPreferredDcStatus cifs domain preferred dc status
//
// swagger:model cifs_domain_preferred_dc_status
type CifsDomainPreferredDcStatus struct {

	// Provides a detailed description of the state if the state is 'down' or
	// the response time of the DNS server if the state is 'up'.
	//
	// Example: Response time (msec): 111
	// Read Only: true
	Details *string `json:"details,omitempty"`

	// Indicates whether or not the domain controller is reachable.
	// Example: true
	// Read Only: true
	Reachable *bool `json:"reachable,omitempty"`
}

// Validate validates this cifs domain preferred dc status
func (m *CifsDomainPreferredDcStatus) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this cifs domain preferred dc status based on the context it is used
func (m *CifsDomainPreferredDcStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateReachable(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CifsDomainPreferredDcStatus) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "details", "body", m.Details); err != nil {
		return err
	}

	return nil
}

func (m *CifsDomainPreferredDcStatus) contextValidateReachable(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "reachable", "body", m.Reachable); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CifsDomainPreferredDcStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CifsDomainPreferredDcStatus) UnmarshalBinary(b []byte) error {
	var res CifsDomainPreferredDcStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
