# vSphere XCOPY Volume Populator E2E Test Configuration
# Copy this file to test-config.env and customize for your environment.
# This file is ignored by git.

# ========================================
# VMware vSphere Configuration
# ========================================
export VSPHERE_HOST="vcenter.example.com"
export VSPHERE_USERNAME="administrator@vsphere.local"
export VSPHERE_PASSWORD="changeme"
export VSPHERE_DATACENTER="Datacenter"
export VSPHERE_DATASTORE="netapp-iscsi-ds"  # Must support copy-offload
export VSPHERE_NETWORK="VM Network"

# ========================================
# OpenShift Configuration
# ========================================
export OCP_API_URL="https://api.cluster.example.com:6443"
export OCP_USERNAME="admin"
export OCP_PASSWORD="changeme"
# Namespace where the migrated VM will be created.
export OCP_NAMESPACE="openshift-mtv"
# Storage class for migrated volumes. Must map to the XCOPY-capable storage.
export OCP_STORAGE_CLASS="netapp-iscsi-sc"

# ========================================
# Forklift Configuration
# ========================================
# The namespace where Forklift/MTV is installed. Often the same as OCP_NAMESPACE.
export FORKLIFT_NAMESPACE="openshift-mtv"
# The name of the vSphere provider in Forklift.
export VSPHERE_PROVIDER_NAME="vsphere-provider"
# The name of the OpenShift/Host provider in Forklift.
export HOST_PROVIDER_NAME="host-provider"
# The name of the route exposing the Forklift API. Defaults to forklift-inventory.
export FORKLIFT_API_ROUTE="forklift-inventory"

# ========================================
# Storage Configuration
# ========================================
export STORAGE_VENDOR_PRODUCT="ontap"  # Options: "ontap", "vantara, etc..."
export STORAGE_HOSTNAME="netapp.example.com"
export STORAGE_USERNAME="admin"
export STORAGE_PASSWORD="changeme"

# Name for the secret that will hold storage credentials.
# If using TARGET_VM_NAME, this must be predefined.
# Otherwise, it's generated dynamically.
export STORAGE_SECRET_NAME="storage-credentials"

# NetApp ONTAP specific (if using ONTAP)
export ONTAP_SVM="svm1"  # Optional: specify SVM if needed

# ========================================
# Test VM Configuration
# ========================================
export VM_NAME_PREFIX="copyoffload-test-vm"

# Optional: Use an existing VM instead of creating a new one.
# The VM must exist on the source vSphere provider.
# export TARGET_VM_NAME="my-existing-vm"

# VM Hardware Configuration (optional - will use sensible defaults)
export VM_DISK_SIZE_GB="20"     # GB - VM disk size (default: 20GB)
export VM_MEMORY_MB="2048"      # MB - VM memory allocation (default: 2048MB)
export VM_CPU_COUNT="2"         # Number of vCPUs (default: 2)

# Operating System Configuration
# Supported OS types: linux-centos7, linux-centos8, linux-rhel7, linux-rhel8, linux-rhel9, 
#                     linux-ubuntu1804, linux-ubuntu2004, linux-ubuntu2204,
#                     windows-2016, windows-2019, windows-2022, windows-10, windows-11
export VM_OS_TYPE="linux-rhel8"       # OS type for VM (default: linux-rhel8)

# VM Creation Options (choose one if not using TARGET_VM_NAME)
# Option 1: Use existing VM template (recommended)
export VM_TEMPLATE_NAME="rhel8-template" # VM template name in vSphere (leave empty to create from scratch)

# Option 2: Create from ISO (if no template available)
# export VM_ISO_PATH="[datastore] iso/rhel-8.7-x86_64-dvd.iso"  # ISO path for OS installation

# ========================================
# Test Behaviour Configuration
# ========================================
# Timeouts must be in a format parsable by time.ParseDuration (e.g., "600s", "10m", "1h")
export PLAN_TIMEOUT="500s"       # Timeout for plan to become ready.
export MIGRATION_TIMEOUT="500s"  # Timeout for migration to complete.
export VM_BOOT_TIMEOUT="300s"    # Timeout for migrated VM to boot in OpenShift.

export DEBUG_MODE="false"          # Enable verbose debug logging.
export KEEP_VM_ON_SUCCESS="false"  # Keep test VM after successful test run.

# ========================================
# Remote Execution via SSH (Optional)
# ========================================
# If you need to run `oc` commands on a remote server (e.g., bastion),
# set these variables. This avoids copying kubeconfig locally.
# The remote user must have passwordless SSH access (e.g., via SSH keys)
# and have `oc` in their shell's PATH.

# export SSH_HOST="bastion.example.com"
# export SSH_USER="your_user"
# export SSH_KEY_PATH="/home/user/.ssh/id_rsa"
# 
# If the kubeconfig on the remote server is not in a standard location
# (`~/.kube/config`), specify its absolute path here.
# export REMOTE_KUBECONFIG_PATH="/home/your_user/custom/path/to/kubeconfig"
