// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FirmwareHistoryUpdateStateError firmware history update state error
//
// swagger:model firmware_history_update_state_error
type FirmwareHistoryUpdateStateError struct {

	// Code corresponding to the status message.
	// Example: 2228325
	Code *int64 `json:"code,omitempty"`

	// Error message returned when a firmware update job fails.
	// Example: Cannot open local staging ZIP file disk_firmware.zip
	Message *string `json:"message,omitempty"`
}

// Validate validates this firmware history update state error
func (m *FirmwareHistoryUpdateStateError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this firmware history update state error based on context it is used
func (m *FirmwareHistoryUpdateStateError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FirmwareHistoryUpdateStateError) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FirmwareHistoryUpdateStateError) UnmarshalBinary(b []byte) error {
	var res FirmwareHistoryUpdateStateError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
