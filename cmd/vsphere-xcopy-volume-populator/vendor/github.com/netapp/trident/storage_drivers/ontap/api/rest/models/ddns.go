// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Ddns ddns
//
// swagger:model ddns
type Ddns struct {

	// Enable or disable Dynamic DNS (DDNS) updates for the specified SVM.
	//
	Enabled *bool `json:"enabled,omitempty"`

	// Fully Qualified Domain Name (FQDN) to be used for dynamic DNS updates.
	//
	// Example: example.com
	Fqdn *string `json:"fqdn,omitempty"`

	// Enable or disable FQDN validation.
	//
	SkipFqdnValidation *bool `json:"skip_fqdn_validation,omitempty"`

	// Time to live value for the dynamic DNS updates, in an ISO-8601 duration formatted string.
	// Maximum Time To Live is 720 hours(P30D in ISO-8601 format) and the default is 24 hours(P1D in ISO-8601 format).
	//
	// Example: P2D
	TimeToLive *string `json:"time_to_live,omitempty"`

	// Enable or disable secure dynamic DNS updates for the specified SVM.
	//
	UseSecure *bool `json:"use_secure,omitempty"`
}

// Validate validates this ddns
func (m *Ddns) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ddns based on context it is used
func (m *Ddns) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Ddns) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Ddns) UnmarshalBinary(b []byte) error {
	var res Ddns
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
