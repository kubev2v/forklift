load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "openstack",
    srcs = [
        "client.go",
        "collector.go",
        "doc.go",
        "model.go",
        "resource.go",
        "watch.go",
    ],
    importpath = "github.com/konveyor/forklift-controller/pkg/controller/provider/container/openstack",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/apis/forklift/v1beta1",
        "//pkg/apis/forklift/v1beta1/ref",
        "//pkg/controller/provider/model/openstack",
        "//pkg/controller/provider/web/openstack",
        "//pkg/controller/validation/policy",
        "//pkg/lib/error",
        "//pkg/lib/filebacked",
        "//pkg/lib/inventory/model",
        "//pkg/lib/logging",
        "//pkg/settings",
        "//vendor/github.com/go-logr/logr",
        "//vendor/github.com/gophercloud/gophercloud",
        "//vendor/github.com/gophercloud/gophercloud/openstack",
        "//vendor/github.com/gophercloud/gophercloud/openstack/blockstorage/v3/snapshots",
        "//vendor/github.com/gophercloud/gophercloud/openstack/blockstorage/v3/volumes",
        "//vendor/github.com/gophercloud/gophercloud/openstack/blockstorage/v3/volumetypes",
        "//vendor/github.com/gophercloud/gophercloud/openstack/compute/v2/flavors",
        "//vendor/github.com/gophercloud/gophercloud/openstack/compute/v2/servers",
        "//vendor/github.com/gophercloud/gophercloud/openstack/identity/v3/projects",
        "//vendor/github.com/gophercloud/gophercloud/openstack/identity/v3/regions",
        "//vendor/github.com/gophercloud/gophercloud/openstack/identity/v3/tokens",
        "//vendor/github.com/gophercloud/gophercloud/openstack/identity/v3/users",
        "//vendor/github.com/gophercloud/gophercloud/openstack/imageservice/v2/images",
        "//vendor/github.com/gophercloud/gophercloud/openstack/networking/v2/networks",
        "//vendor/github.com/gophercloud/gophercloud/pagination",
        "//vendor/github.com/gophercloud/utils/openstack/clientconfig",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
    ],
)
