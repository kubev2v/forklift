// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewShadowcopyCollectionGetParams creates a new ShadowcopyCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewShadowcopyCollectionGetParams() *ShadowcopyCollectionGetParams {
	return &ShadowcopyCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewShadowcopyCollectionGetParamsWithTimeout creates a new ShadowcopyCollectionGetParams object
// with the ability to set a timeout on a request.
func NewShadowcopyCollectionGetParamsWithTimeout(timeout time.Duration) *ShadowcopyCollectionGetParams {
	return &ShadowcopyCollectionGetParams{
		timeout: timeout,
	}
}

// NewShadowcopyCollectionGetParamsWithContext creates a new ShadowcopyCollectionGetParams object
// with the ability to set a context for a request.
func NewShadowcopyCollectionGetParamsWithContext(ctx context.Context) *ShadowcopyCollectionGetParams {
	return &ShadowcopyCollectionGetParams{
		Context: ctx,
	}
}

// NewShadowcopyCollectionGetParamsWithHTTPClient creates a new ShadowcopyCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewShadowcopyCollectionGetParamsWithHTTPClient(client *http.Client) *ShadowcopyCollectionGetParams {
	return &ShadowcopyCollectionGetParams{
		HTTPClient: client,
	}
}

/*
ShadowcopyCollectionGetParams contains all the parameters to send to the API endpoint

	for the shadowcopy collection get operation.

	Typically these are written to a http.Request.
*/
type ShadowcopyCollectionGetParams struct {

	/* ClientUUID.

	   Filter by client_uuid
	*/
	ClientUUID *string

	/* Fields.

	   Specify the fields to return.
	*/
	Fields []string

	/* Files.

	   Filter by files
	*/
	Files *string

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecords *int64

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderBy []string

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecords *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeout *int64

	/* ShadowcopySetUUID.

	   Filter by shadowcopy_set.uuid
	*/
	ShadowcopySetUUID *string

	/* ShareName.

	   Filter by share.name
	*/
	ShareName *string

	/* SvmName.

	   Filter by svm.name
	*/
	SvmName *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SvmUUID *string

	/* UUID.

	   Filter by uuid
	*/
	UUID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the shadowcopy collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ShadowcopyCollectionGetParams) WithDefaults() *ShadowcopyCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the shadowcopy collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ShadowcopyCollectionGetParams) SetDefaults() {
	var (
		returnRecordsDefault = bool(true)

		returnTimeoutDefault = int64(15)
	)

	val := ShadowcopyCollectionGetParams{
		ReturnRecords: &returnRecordsDefault,
		ReturnTimeout: &returnTimeoutDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithTimeout(timeout time.Duration) *ShadowcopyCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithContext(ctx context.Context) *ShadowcopyCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithHTTPClient(client *http.Client) *ShadowcopyCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientUUID adds the clientUUID to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithClientUUID(clientUUID *string) *ShadowcopyCollectionGetParams {
	o.SetClientUUID(clientUUID)
	return o
}

// SetClientUUID adds the clientUuid to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetClientUUID(clientUUID *string) {
	o.ClientUUID = clientUUID
}

// WithFields adds the fields to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithFields(fields []string) *ShadowcopyCollectionGetParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithFiles adds the files to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithFiles(files *string) *ShadowcopyCollectionGetParams {
	o.SetFiles(files)
	return o
}

// SetFiles adds the files to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetFiles(files *string) {
	o.Files = files
}

// WithMaxRecords adds the maxRecords to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithMaxRecords(maxRecords *int64) *ShadowcopyCollectionGetParams {
	o.SetMaxRecords(maxRecords)
	return o
}

// SetMaxRecords adds the maxRecords to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetMaxRecords(maxRecords *int64) {
	o.MaxRecords = maxRecords
}

// WithOrderBy adds the orderBy to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithOrderBy(orderBy []string) *ShadowcopyCollectionGetParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetOrderBy(orderBy []string) {
	o.OrderBy = orderBy
}

// WithReturnRecords adds the returnRecords to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithReturnRecords(returnRecords *bool) *ShadowcopyCollectionGetParams {
	o.SetReturnRecords(returnRecords)
	return o
}

// SetReturnRecords adds the returnRecords to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetReturnRecords(returnRecords *bool) {
	o.ReturnRecords = returnRecords
}

// WithReturnTimeout adds the returnTimeout to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithReturnTimeout(returnTimeout *int64) *ShadowcopyCollectionGetParams {
	o.SetReturnTimeout(returnTimeout)
	return o
}

// SetReturnTimeout adds the returnTimeout to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetReturnTimeout(returnTimeout *int64) {
	o.ReturnTimeout = returnTimeout
}

// WithShadowcopySetUUID adds the shadowcopySetUUID to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithShadowcopySetUUID(shadowcopySetUUID *string) *ShadowcopyCollectionGetParams {
	o.SetShadowcopySetUUID(shadowcopySetUUID)
	return o
}

// SetShadowcopySetUUID adds the shadowcopySetUuid to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetShadowcopySetUUID(shadowcopySetUUID *string) {
	o.ShadowcopySetUUID = shadowcopySetUUID
}

// WithShareName adds the shareName to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithShareName(shareName *string) *ShadowcopyCollectionGetParams {
	o.SetShareName(shareName)
	return o
}

// SetShareName adds the shareName to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetShareName(shareName *string) {
	o.ShareName = shareName
}

// WithSvmName adds the svmName to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithSvmName(svmName *string) *ShadowcopyCollectionGetParams {
	o.SetSvmName(svmName)
	return o
}

// SetSvmName adds the svmName to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetSvmName(svmName *string) {
	o.SvmName = svmName
}

// WithSvmUUID adds the svmUUID to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithSvmUUID(svmUUID *string) *ShadowcopyCollectionGetParams {
	o.SetSvmUUID(svmUUID)
	return o
}

// SetSvmUUID adds the svmUuid to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetSvmUUID(svmUUID *string) {
	o.SvmUUID = svmUUID
}

// WithUUID adds the uuid to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) WithUUID(uuid *string) *ShadowcopyCollectionGetParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the shadowcopy collection get params
func (o *ShadowcopyCollectionGetParams) SetUUID(uuid *string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *ShadowcopyCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClientUUID != nil {

		// query param client_uuid
		var qrClientUUID string

		if o.ClientUUID != nil {
			qrClientUUID = *o.ClientUUID
		}
		qClientUUID := qrClientUUID
		if qClientUUID != "" {

			if err := r.SetQueryParam("client_uuid", qClientUUID); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.Files != nil {

		// query param files
		var qrFiles string

		if o.Files != nil {
			qrFiles = *o.Files
		}
		qFiles := qrFiles
		if qFiles != "" {

			if err := r.SetQueryParam("files", qFiles); err != nil {
				return err
			}
		}
	}

	if o.MaxRecords != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecords != nil {
			qrMaxRecords = *o.MaxRecords
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.OrderBy != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.ReturnRecords != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecords != nil {
			qrReturnRecords = *o.ReturnRecords
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeout != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeout != nil {
			qrReturnTimeout = *o.ReturnTimeout
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.ShadowcopySetUUID != nil {

		// query param shadowcopy_set.uuid
		var qrShadowcopySetUUID string

		if o.ShadowcopySetUUID != nil {
			qrShadowcopySetUUID = *o.ShadowcopySetUUID
		}
		qShadowcopySetUUID := qrShadowcopySetUUID
		if qShadowcopySetUUID != "" {

			if err := r.SetQueryParam("shadowcopy_set.uuid", qShadowcopySetUUID); err != nil {
				return err
			}
		}
	}

	if o.ShareName != nil {

		// query param share.name
		var qrShareName string

		if o.ShareName != nil {
			qrShareName = *o.ShareName
		}
		qShareName := qrShareName
		if qShareName != "" {

			if err := r.SetQueryParam("share.name", qShareName); err != nil {
				return err
			}
		}
	}

	if o.SvmName != nil {

		// query param svm.name
		var qrSvmName string

		if o.SvmName != nil {
			qrSvmName = *o.SvmName
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SvmUUID != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SvmUUID != nil {
			qrSvmUUID = *o.SvmUUID
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.UUID != nil {

		// query param uuid
		var qrUUID string

		if o.UUID != nil {
			qrUUID = *o.UUID
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamShadowcopyCollectionGet binds the parameter fields
func (o *ShadowcopyCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamShadowcopyCollectionGet binds the parameter order_by
func (o *ShadowcopyCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderBy

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
