load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "plan",
    srcs = [
        "controller.go",
        "doc.go",
        "hook.go",
        "kubevirt.go",
        "metrics.go",
        "migration.go",
        "predicate.go",
        "validation.go",
        "vm_name_handler.go",
    ],
    importpath = "github.com/konveyor/forklift-controller/pkg/controller/plan",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/apis/forklift/v1beta1",
        "//pkg/apis/forklift/v1beta1/plan",
        "//pkg/apis/forklift/v1beta1/ref",
        "//pkg/controller/base",
        "//pkg/controller/plan/adapter",
        "//pkg/controller/plan/context",
        "//pkg/controller/plan/handler",
        "//pkg/controller/plan/scheduler",
        "//pkg/controller/provider/web",
        "//pkg/controller/validation",
        "//pkg/lib/condition",
        "//pkg/lib/error",
        "//pkg/lib/itinerary",
        "//pkg/lib/logging",
        "//pkg/lib/ref",
        "//pkg/settings",
        "//vendor/github.com/k8snetworkplumbingwg/network-attachment-definition-client/pkg/apis/k8s.cni.cncf.io/v1:k8s_cni_cncf_io",
        "//vendor/github.com/openshift/api/template/v1:template",
        "//vendor/github.com/openshift/library-go/pkg/template/generator",
        "//vendor/github.com/openshift/library-go/pkg/template/templateprocessing",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/prometheus/client_golang/prometheus/promauto",
        "//vendor/gopkg.in/yaml.v2:yaml_v2",
        "//vendor/k8s.io/api/batch/v1:batch",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/api/resource",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/conversion",
        "//vendor/k8s.io/apimachinery/pkg/fields",
        "//vendor/k8s.io/apimachinery/pkg/labels",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
        "//vendor/k8s.io/apimachinery/pkg/types",
        "//vendor/k8s.io/apimachinery/pkg/util/validation",
        "//vendor/k8s.io/apiserver/pkg/storage/names",
        "//vendor/k8s.io/client-go/kubernetes/scheme",
        "//vendor/kubevirt.io/api/core/v1:core",
        "//vendor/kubevirt.io/containerized-data-importer-api/pkg/apis/core/v1beta1",
        "//vendor/libvirt.org/libvirt-go-xml",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/client",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/controller",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/controller/controllerutil",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/event",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/handler",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/manager",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/predicate",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/reconcile",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/source",
    ],
)

go_test(
    name = "plan_test",
    srcs = ["vm_name_handler_test.go"],
    embed = [":plan"],
    deps = ["//vendor/github.com/onsi/gomega"],
)
