// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WindowsToUnix windows to unix
//
// swagger:model windows_to_unix
type WindowsToUnix struct {

	// Attribute name used to retrieve the UNIX account information for a Windows user account.
	// Example: windowsAccount
	Attribute *string `json:"attribute,omitempty"`

	// Indicates whether or not the name for Windows to UNIX name mapping should have a domain prefix.
	// Example: false
	NoDomainPrefix *bool `json:"no_domain_prefix,omitempty"`

	// Name used to represent the windowsToUnix object class.
	// Example: User
	ObjectClass *string `json:"object_class,omitempty"`
}

// Validate validates this windows to unix
func (m *WindowsToUnix) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this windows to unix based on context it is used
func (m *WindowsToUnix) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WindowsToUnix) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WindowsToUnix) UnmarshalBinary(b []byte) error {
	var res WindowsToUnix
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
