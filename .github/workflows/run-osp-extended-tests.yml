name: openstack-extended-tests
on:
  workflow_dispatch:
    name:
      description: 'run e2e openstack  extended tests on Self hosted runner'
  workflow_call:
  issue_comment:
    types: [ created ]

# ensures that only a single workflow  will run at the same time
# if another workflow triggered it will pending until first completion.
concurrency:
  group: hosted-e2e

# A workflow run is made up of one or more jobs that can run sequentially
jobs:
  create_ovirt_runner:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/test-osp-extended')
    runs-on: ubuntu-latest
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      - name: Set latest commit status as pending
        if: always()
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout forklift
        uses: actions/checkout@v3

      - id: codeowner
        uses: SvanBoxel/codeowners-action@v1
        with:
          path: './.github/CODEOWNERS'

      - name: fail if the commenter doesnt exists in codeowners
        run: |
          [[ $(echo '${{ steps.codeowner.outputs.codeowners }}' | \
          jq  -r '."tests/" | index("@${{ github.event.comment.user.login }}")') -eq 1 ]]

      - name: prepare the secrets
        #uses: kubev2v/forkliftci/ci/prepare-ansible-secrets@v4.0
        uses: eslutsky/forkliftci/ci/prepare-ansible-secrets@gh-runner-fail-early
        with:
          OKD_ENGINE_SECRETS: ${{ secrets.OKD_ENGINE_SECRETS }}
          OKD_SSH_KEY: ${{ secrets.OKD_SSH_KEY }}

      - name: provision self hosted runner
        #uses: kubev2v/forkliftci/ci/create-self-runner@v4.0
        uses: eslutsky/forkliftci/ci/create-self-runner@gh-runner-fail-early

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: ${{ failure() || cancelled() }}
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}

  ci_setup:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/test-osp-extended')
    runs-on: self-hosted
    #runs-on: ubuntu-latest
    needs: create_ovirt_runner
    env:
      USE_BAZEL_VERSION: 5.4.0
      source_provider: openstack
    timeout-minutes: 45
    steps:
      - name: Checkout forklift
        uses: actions/checkout@v3
        with:
          path: forklift

      - name: Checkout forkliftci
        uses: actions/checkout@v3
        with:
          repository: kubev2v/forkliftci
          ref: v4.0

      - name: add docker-hub token
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "${{  secrets.DOCKER_HUB_USER }}" --password-stdin

      - name: build and setup everything
        #uses: kubev2v/forkliftci/ci/build-and-setup@v4.0
        uses: eslutsky/forkliftci/ci/build-and-setup@gh-runner-fail-early
        with:
          provider_name: openstack
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          enable_openstack_ssl: true

      - run: kubectl version

      - run: kubectl get pods -n konveyor-forklift

      - name: run e2e-sanity-openstack
        uses: kubev2v/forkliftci/ci/run-suite@v3.0
        with:
          suite_name: e2e-sanity-openstack-extended

      - name: save k8s logs and upload-artifact
        if: ${{ always() }}
        uses: kubev2v/forkliftci/ci/save-artifacts@v3.0
        with:
          source_provider: openstack

      - name: Get PR branch
        if: always()
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}

      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  remove_ovirt_runner:
    runs-on: ubuntu-latest
    if: ${{ success() || failure() || cancelled() }}
    needs: [create_ovirt_runner,ci_setup]
    steps:
      - name: prepare the secrets
        uses: kubev2v/forkliftci/ci/prepare-ansible-secrets@v4.0
        with:
          OKD_ENGINE_SECRETS: ${{ secrets.OKD_ENGINE_SECRETS }}
          OKD_SSH_KEY: ${{ secrets.OKD_SSH_KEY }}
      - name: provision self hosted runner
        uses: kubev2v/forkliftci/ci/create-self-runner@v4.0
        with:
          perform_cleanup: true