// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// LicenseManagerModifyReader is a Reader for the LicenseManagerModify structure.
type LicenseManagerModifyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LicenseManagerModifyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewLicenseManagerModifyAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewLicenseManagerModifyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLicenseManagerModifyAccepted creates a LicenseManagerModifyAccepted with default headers values
func NewLicenseManagerModifyAccepted() *LicenseManagerModifyAccepted {
	return &LicenseManagerModifyAccepted{}
}

/*
LicenseManagerModifyAccepted describes a response with status code 202, with default header values.

Accepted
*/
type LicenseManagerModifyAccepted struct {
	Payload *models.JobLinkResponse
}

// IsSuccess returns true when this license manager modify accepted response has a 2xx status code
func (o *LicenseManagerModifyAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this license manager modify accepted response has a 3xx status code
func (o *LicenseManagerModifyAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this license manager modify accepted response has a 4xx status code
func (o *LicenseManagerModifyAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this license manager modify accepted response has a 5xx status code
func (o *LicenseManagerModifyAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this license manager modify accepted response a status code equal to that given
func (o *LicenseManagerModifyAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *LicenseManagerModifyAccepted) Error() string {
	return fmt.Sprintf("[PATCH /cluster/licensing/license-managers/{uuid}][%d] licenseManagerModifyAccepted  %+v", 202, o.Payload)
}

func (o *LicenseManagerModifyAccepted) String() string {
	return fmt.Sprintf("[PATCH /cluster/licensing/license-managers/{uuid}][%d] licenseManagerModifyAccepted  %+v", 202, o.Payload)
}

func (o *LicenseManagerModifyAccepted) GetPayload() *models.JobLinkResponse {
	return o.Payload
}

func (o *LicenseManagerModifyAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobLinkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLicenseManagerModifyDefault creates a LicenseManagerModifyDefault with default headers values
func NewLicenseManagerModifyDefault(code int) *LicenseManagerModifyDefault {
	return &LicenseManagerModifyDefault{
		_statusCode: code,
	}
}

/*
	LicenseManagerModifyDefault describes a response with status code -1, with default header values.

	ONTAP Error Response Codes

| Error Code | Description |
| ---------- | ----------- |
| 1115532 | The requested update to the license manager information failed. |
*/
type LicenseManagerModifyDefault struct {
	_statusCode int

	Payload *models.ErrorResponses
}

// Code gets the status code for the license manager modify default response
func (o *LicenseManagerModifyDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this license manager modify default response has a 2xx status code
func (o *LicenseManagerModifyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this license manager modify default response has a 3xx status code
func (o *LicenseManagerModifyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this license manager modify default response has a 4xx status code
func (o *LicenseManagerModifyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this license manager modify default response has a 5xx status code
func (o *LicenseManagerModifyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this license manager modify default response a status code equal to that given
func (o *LicenseManagerModifyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *LicenseManagerModifyDefault) Error() string {
	return fmt.Sprintf("[PATCH /cluster/licensing/license-managers/{uuid}][%d] license_manager_modify default  %+v", o._statusCode, o.Payload)
}

func (o *LicenseManagerModifyDefault) String() string {
	return fmt.Sprintf("[PATCH /cluster/licensing/license-managers/{uuid}][%d] license_manager_modify default  %+v", o._statusCode, o.Payload)
}

func (o *LicenseManagerModifyDefault) GetPayload() *models.ErrorResponses {
	return o.Payload
}

func (o *LicenseManagerModifyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponses)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
