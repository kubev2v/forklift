// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// LocalCifsUsersAndGroupsImportModifyReader is a Reader for the LocalCifsUsersAndGroupsImportModify structure.
type LocalCifsUsersAndGroupsImportModifyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LocalCifsUsersAndGroupsImportModifyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewLocalCifsUsersAndGroupsImportModifyAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewLocalCifsUsersAndGroupsImportModifyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLocalCifsUsersAndGroupsImportModifyAccepted creates a LocalCifsUsersAndGroupsImportModifyAccepted with default headers values
func NewLocalCifsUsersAndGroupsImportModifyAccepted() *LocalCifsUsersAndGroupsImportModifyAccepted {
	return &LocalCifsUsersAndGroupsImportModifyAccepted{}
}

/*
LocalCifsUsersAndGroupsImportModifyAccepted describes a response with status code 202, with default header values.

Accepted
*/
type LocalCifsUsersAndGroupsImportModifyAccepted struct {
	Payload *models.JobLinkResponse
}

// IsSuccess returns true when this local cifs users and groups import modify accepted response has a 2xx status code
func (o *LocalCifsUsersAndGroupsImportModifyAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this local cifs users and groups import modify accepted response has a 3xx status code
func (o *LocalCifsUsersAndGroupsImportModifyAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this local cifs users and groups import modify accepted response has a 4xx status code
func (o *LocalCifsUsersAndGroupsImportModifyAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this local cifs users and groups import modify accepted response has a 5xx status code
func (o *LocalCifsUsersAndGroupsImportModifyAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this local cifs users and groups import modify accepted response a status code equal to that given
func (o *LocalCifsUsersAndGroupsImportModifyAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *LocalCifsUsersAndGroupsImportModifyAccepted) Error() string {
	return fmt.Sprintf("[PATCH /protocols/cifs/users-and-groups/bulk-import/{svm.uuid}][%d] localCifsUsersAndGroupsImportModifyAccepted  %+v", 202, o.Payload)
}

func (o *LocalCifsUsersAndGroupsImportModifyAccepted) String() string {
	return fmt.Sprintf("[PATCH /protocols/cifs/users-and-groups/bulk-import/{svm.uuid}][%d] localCifsUsersAndGroupsImportModifyAccepted  %+v", 202, o.Payload)
}

func (o *LocalCifsUsersAndGroupsImportModifyAccepted) GetPayload() *models.JobLinkResponse {
	return o.Payload
}

func (o *LocalCifsUsersAndGroupsImportModifyAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobLinkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocalCifsUsersAndGroupsImportModifyDefault creates a LocalCifsUsersAndGroupsImportModifyDefault with default headers values
func NewLocalCifsUsersAndGroupsImportModifyDefault(code int) *LocalCifsUsersAndGroupsImportModifyDefault {
	return &LocalCifsUsersAndGroupsImportModifyDefault{
		_statusCode: code,
	}
}

/*
LocalCifsUsersAndGroupsImportModifyDefault describes a response with status code -1, with default header values.

Error
*/
type LocalCifsUsersAndGroupsImportModifyDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the local cifs users and groups import modify default response
func (o *LocalCifsUsersAndGroupsImportModifyDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this local cifs users and groups import modify default response has a 2xx status code
func (o *LocalCifsUsersAndGroupsImportModifyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this local cifs users and groups import modify default response has a 3xx status code
func (o *LocalCifsUsersAndGroupsImportModifyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this local cifs users and groups import modify default response has a 4xx status code
func (o *LocalCifsUsersAndGroupsImportModifyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this local cifs users and groups import modify default response has a 5xx status code
func (o *LocalCifsUsersAndGroupsImportModifyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this local cifs users and groups import modify default response a status code equal to that given
func (o *LocalCifsUsersAndGroupsImportModifyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *LocalCifsUsersAndGroupsImportModifyDefault) Error() string {
	return fmt.Sprintf("[PATCH /protocols/cifs/users-and-groups/bulk-import/{svm.uuid}][%d] local_cifs_users_and_groups_import_modify default  %+v", o._statusCode, o.Payload)
}

func (o *LocalCifsUsersAndGroupsImportModifyDefault) String() string {
	return fmt.Sprintf("[PATCH /protocols/cifs/users-and-groups/bulk-import/{svm.uuid}][%d] local_cifs_users_and_groups_import_modify default  %+v", o._statusCode, o.Payload)
}

func (o *LocalCifsUsersAndGroupsImportModifyDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *LocalCifsUsersAndGroupsImportModifyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
