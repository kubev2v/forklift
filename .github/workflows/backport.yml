name: Backport

on:
  workflow_dispatch:
    inputs:
      targetBranch:
        description: 'Target branch'
        required: true
        type: string
      pullRequest:
        description: 'Pull request'
        required: true
        type: string
      dryRun:
        description: 'Dry run'
        required: false
        default: "true"
        type: string
  issue_comment:
    types:
      - created


jobs:
  backport:
    name: Backport
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event.issue.pull_request != '' &&
      startsWith(github.event.comment.body, '/backport'))
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get target branch and PR number
        id: target_info
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            pr_number="${{ github.event.inputs.pullRequest}}"
            branch_name="${{ github.event.inputs.targetBranch }}"
          else
            pr_number="${{ github.event.issue.number }}"
            branch_name=$(echo "${{ github.event.comment.body }}" | awk '{print $2}')
          fi
          if [[ -z "$branch_name" ]]; then
            echo "Target branch is not specified"
            exit 1
          fi
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT


      - name: Backporting
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.target_info.outputs.pr_number }}
          BRANCH_NAME: ${{ steps.target_info.outputs.branch_name }}
        uses: kiegroup/git-backporting@main
        with:
          target-branch: ${{ steps.target_info.outputs.branch_name }}
          pull-request: ${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.target_info.outputs.pr_number }}
          no-squash: true
          auth: ${{ secrets.GITHUB_TOKEN }}
          dry-run: ${{ inputs.dryRun }}


