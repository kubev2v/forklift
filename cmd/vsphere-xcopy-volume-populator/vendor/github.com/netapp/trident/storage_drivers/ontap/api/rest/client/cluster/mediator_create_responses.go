// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// MediatorCreateReader is a Reader for the MediatorCreate structure.
type MediatorCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MediatorCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewMediatorCreateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewMediatorCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMediatorCreateAccepted creates a MediatorCreateAccepted with default headers values
func NewMediatorCreateAccepted() *MediatorCreateAccepted {
	return &MediatorCreateAccepted{}
}

/*
MediatorCreateAccepted describes a response with status code 202, with default header values.

Accepted
*/
type MediatorCreateAccepted struct {

	/* Useful for tracking the resource location
	 */
	Location string

	Payload *models.JobLinkResponse
}

// IsSuccess returns true when this mediator create accepted response has a 2xx status code
func (o *MediatorCreateAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this mediator create accepted response has a 3xx status code
func (o *MediatorCreateAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this mediator create accepted response has a 4xx status code
func (o *MediatorCreateAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this mediator create accepted response has a 5xx status code
func (o *MediatorCreateAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this mediator create accepted response a status code equal to that given
func (o *MediatorCreateAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *MediatorCreateAccepted) Error() string {
	return fmt.Sprintf("[POST /cluster/mediators][%d] mediatorCreateAccepted  %+v", 202, o.Payload)
}

func (o *MediatorCreateAccepted) String() string {
	return fmt.Sprintf("[POST /cluster/mediators][%d] mediatorCreateAccepted  %+v", 202, o.Payload)
}

func (o *MediatorCreateAccepted) GetPayload() *models.JobLinkResponse {
	return o.Payload
}

func (o *MediatorCreateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	o.Payload = new(models.JobLinkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMediatorCreateDefault creates a MediatorCreateDefault with default headers values
func NewMediatorCreateDefault(code int) *MediatorCreateDefault {
	return &MediatorCreateDefault{
		_statusCode: code,
	}
}

/*
	MediatorCreateDefault describes a response with status code -1, with default header values.

	ONTAP Error Response codes

| Error code  |  Description |
|-------------|--------------|
| 13369351    | Update to mediator failed. Reason: does not authorized for that command. Check that the peer cluster and mediator are reachable.|
*/
type MediatorCreateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the mediator create default response
func (o *MediatorCreateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this mediator create default response has a 2xx status code
func (o *MediatorCreateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this mediator create default response has a 3xx status code
func (o *MediatorCreateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this mediator create default response has a 4xx status code
func (o *MediatorCreateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this mediator create default response has a 5xx status code
func (o *MediatorCreateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this mediator create default response a status code equal to that given
func (o *MediatorCreateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *MediatorCreateDefault) Error() string {
	return fmt.Sprintf("[POST /cluster/mediators][%d] mediator_create default  %+v", o._statusCode, o.Payload)
}

func (o *MediatorCreateDefault) String() string {
	return fmt.Sprintf("[POST /cluster/mediators][%d] mediator_create default  %+v", o._statusCode, o.Payload)
}

func (o *MediatorCreateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *MediatorCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
