// Code generated by go-swagger; DO NOT EDIT.

package svm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSvmPeerPermissionDeleteParams creates a new SvmPeerPermissionDeleteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSvmPeerPermissionDeleteParams() *SvmPeerPermissionDeleteParams {
	return &SvmPeerPermissionDeleteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSvmPeerPermissionDeleteParamsWithTimeout creates a new SvmPeerPermissionDeleteParams object
// with the ability to set a timeout on a request.
func NewSvmPeerPermissionDeleteParamsWithTimeout(timeout time.Duration) *SvmPeerPermissionDeleteParams {
	return &SvmPeerPermissionDeleteParams{
		timeout: timeout,
	}
}

// NewSvmPeerPermissionDeleteParamsWithContext creates a new SvmPeerPermissionDeleteParams object
// with the ability to set a context for a request.
func NewSvmPeerPermissionDeleteParamsWithContext(ctx context.Context) *SvmPeerPermissionDeleteParams {
	return &SvmPeerPermissionDeleteParams{
		Context: ctx,
	}
}

// NewSvmPeerPermissionDeleteParamsWithHTTPClient creates a new SvmPeerPermissionDeleteParams object
// with the ability to set a custom HTTPClient for a request.
func NewSvmPeerPermissionDeleteParamsWithHTTPClient(client *http.Client) *SvmPeerPermissionDeleteParams {
	return &SvmPeerPermissionDeleteParams{
		HTTPClient: client,
	}
}

/*
SvmPeerPermissionDeleteParams contains all the parameters to send to the API endpoint

	for the svm peer permission delete operation.

	Typically these are written to a http.Request.
*/
type SvmPeerPermissionDeleteParams struct {

	/* ClusterPeerUUID.

	   Peer cluster UUID
	*/
	ClusterPeerUUID string

	/* SvmUUID.

	   SVM UUID
	*/
	SvmUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the svm peer permission delete params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SvmPeerPermissionDeleteParams) WithDefaults() *SvmPeerPermissionDeleteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the svm peer permission delete params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SvmPeerPermissionDeleteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) WithTimeout(timeout time.Duration) *SvmPeerPermissionDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) WithContext(ctx context.Context) *SvmPeerPermissionDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) WithHTTPClient(client *http.Client) *SvmPeerPermissionDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterPeerUUID adds the clusterPeerUUID to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) WithClusterPeerUUID(clusterPeerUUID string) *SvmPeerPermissionDeleteParams {
	o.SetClusterPeerUUID(clusterPeerUUID)
	return o
}

// SetClusterPeerUUID adds the clusterPeerUuid to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) SetClusterPeerUUID(clusterPeerUUID string) {
	o.ClusterPeerUUID = clusterPeerUUID
}

// WithSvmUUID adds the svmUUID to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) WithSvmUUID(svmUUID string) *SvmPeerPermissionDeleteParams {
	o.SetSvmUUID(svmUUID)
	return o
}

// SetSvmUUID adds the svmUuid to the svm peer permission delete params
func (o *SvmPeerPermissionDeleteParams) SetSvmUUID(svmUUID string) {
	o.SvmUUID = svmUUID
}

// WriteToRequest writes these params to a swagger request
func (o *SvmPeerPermissionDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cluster_peer.uuid
	if err := r.SetPathParam("cluster_peer.uuid", o.ClusterPeerUUID); err != nil {
		return err
	}

	// path param svm.uuid
	if err := r.SetPathParam("svm.uuid", o.SvmUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
