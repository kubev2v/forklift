// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TopMetricValueErrorBounds top metric value error bounds
//
// swagger:model top_metric_value_error_bounds
type TopMetricValueErrorBounds struct {

	// Lower bound of the nominal value of a metric.
	// Example: 34
	// Read Only: true
	LowerBound *int64 `json:"lower_bound,omitempty"`

	// Upper bound of the nominal value of a metric.
	// Example: 54
	// Read Only: true
	UpperBound *int64 `json:"upper_bound,omitempty"`
}

// Validate validates this top metric value error bounds
func (m *TopMetricValueErrorBounds) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this top metric value error bounds based on the context it is used
func (m *TopMetricValueErrorBounds) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateLowerBound(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateUpperBound(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TopMetricValueErrorBounds) contextValidateLowerBound(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "lower_bound", "body", m.LowerBound); err != nil {
		return err
	}

	return nil
}

func (m *TopMetricValueErrorBounds) contextValidateUpperBound(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "upper_bound", "body", m.UpperBound); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TopMetricValueErrorBounds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TopMetricValueErrorBounds) UnmarshalBinary(b []byte) error {
	var res TopMetricValueErrorBounds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
