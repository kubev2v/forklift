load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "migration",
    srcs = [
        "controller.go",
        "doc.go",
        "metrics.go",
        "predicate.go",
        "validation.go",
    ],
    importpath = "github.com/konveyor/forklift-controller/pkg/controller/migration",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/apis/forklift/v1beta1",
        "//pkg/controller/base",
        "//pkg/controller/plan",
        "//pkg/controller/provider/web",
        "//pkg/settings",
        "//vendor/github.com/konveyor/controller/pkg/condition",
        "//vendor/github.com/konveyor/controller/pkg/error",
        "//vendor/github.com/konveyor/controller/pkg/logging",
        "//vendor/github.com/konveyor/controller/pkg/ref",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/prometheus/client_golang/prometheus/promauto",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apiserver/pkg/storage/names",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/client",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/controller",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/event",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/handler",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/manager",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/predicate",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/reconcile",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/source",
    ],
)
