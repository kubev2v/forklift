---
- block:

  - name: "Set UI plugin feature state"
    set_fact:
      ui_plugin_state: "present"
    when: feature_ui_plugin|bool

  - name: "Set validation feature state"
    set_fact:
      validation_state: "present"
    when: feature_validation|bool

  - name: "Set must-gather-api feature state"
    set_fact:
      must_gather_api_state: "present"
    when: feature_must_gather_api|bool

  - name: "Set volume populator feature state"
    set_fact:
      volume_populator_state: "present"
    when: feature_volume_populator|bool

  - name: "Load cluster API groups"
    set_fact:
      api_groups: "{{ lookup('k8s', cluster_info='api_groups') }}"

  - when: "'route.openshift.io' not in api_groups"
    block:
    - name: "Enable k8s cluster environment"
      set_fact:
        k8s_cluster: true

    - name: "Obtain k8s cluster version"
      set_fact:
        k8s_cluster_version: "{{ lookup('k8s', cluster_info='version').kubernetes.gitVersion }}"

  - when: not k8s_cluster|bool
    block:
    - name: "Get cluster proxy object"
      set_fact:
        proxy_cluster: "{{ lookup('k8s', api_version='config.openshift.io/v1', kind='Proxy', resource_name='cluster') }}"

    - when: proxy_cluster.spec.trustedCA.name|length > 0
      block:
      - name: "Enable trusted CA environment"
        set_fact:
          trusted_ca_enabled: true

      - name: "Create an empty ConfigMap that will hold the trusted CA"
        k8s:
          state: present
          definition: "{{ lookup('template', 'configmap-trusted-ca.yml.j2') }}"

  - name: "Setup the webhook secret"
    k8s:
      state: present
      definition: "{{ lookup('template', 'secret-webhook-server-secret.yml.j2') }}"

  - name: "Setup controller config map"
    k8s:
      state : present
      definition: "{{ lookup('template', 'controller/configmap-controller.yml.j2') }}"

  - name: "Setup inventory service"
    k8s:
      state: present
      definition: "{{ lookup('template', 'controller/service-inventory.yml.j2') }}"

  - name: "Setup controller deployment"
    k8s:
      state : present
      definition: "{{ lookup('template', 'controller/deployment-controller.yml.j2') }}"
      merge_type: "merge"

  - name: "Setup inventory route"
    k8s:
      state: present
      definition: "{{ lookup('template', 'controller/route-inventory.yml.j2') }}"
    when: not k8s_cluster|bool

  - name: "Setup forklift-controller security context constraints"
    k8s:
      state: present
      definition: "{{ lookup('template', 'controller/controller-scc.yml.j2') }}"
    when: not k8s_cluster|bool

  - when: feature_volume_populator|bool
    block:
    - name: "Setup populator controller deployment"
      k8s:
        state: "{{ volume_populator_state }}"
        definition: "{{ lookup('template', 'populator/deployment-populator-controller.yml.j2') }}"

  - when: k8s_cluster|bool
    block:
    - name: "Create a trusted CA issuer"
      k8s:
        state: present
        definition: "{{ lookup('template', 'cert-manager-trusted-ca.yml.j2') }}"
    - name: "Configure webhook certificate on K8s"
      k8s:
        state: present
        definition: "{{ lookup('template', 'api/ca.yml.j2') }}"
    - name: "Configure validation certificate on K8s"
      k8s:
        state: present
        definition: "{{ lookup('template', 'validation/ca.yml.j2') }}"
    - name: "Configure inventory certificate on K8s"
      k8s:
        state: present
        definition: "{{ lookup('template', 'controller/ca.yml.j2') }}"
    - name: "Configure must-gather certificate on K8s"
      k8s:
        state: present
        definition: "{{ lookup('template', 'must-gather-api/ca.yml.j2') }}"

  - name: "Setup api service"
    k8s:
      state: present
      definition: "{{ lookup('template', 'api/service-forklift-api.yml.j2') }}"

  - name: "Setup api deployment"
    k8s:
      state: present
      definition: "{{ lookup('template', 'api/deployment-forklift-api.yml.j2') }}"

  - name: "Setup api validating webhook configuration"
    k8s:
      state: present
      definition: "{{ lookup('template', 'api/validatingwebhookconfiguration-forklift-api.yml.j2') }}"

  - name: "Setup api mutating webhook configuration"
    k8s:
      state: present
      definition: "{{ lookup('template', 'api/mutatingwebhookconfiguration-forklift-api.yml.j2') }}"

  - name: "Setup default provider"
    k8s:
      state: present
      definition: "{{ lookup('template', 'controller/provider-host.yml.j2') }}"
    when: "'kubevirt.io' in api_groups"

  - when: feature_validation|bool
    block:
    - name: "Setup validation service"
      k8s:
        state: "{{ validation_state }}"
        definition: "{{ lookup('template', 'validation/service-validation.yml.j2') }}"

    - name: "Setup validation config map"
      k8s:
        state: "{{ validation_state }}"
        definition: "{{ lookup('template', 'validation/configmap-validation.yml.j2') }}"

    - name: "Setup validation deployment"
      k8s:
        state: "{{ validation_state }}"
        definition: "{{ lookup('template', 'validation/deployment-validation.yml.j2') }}"

  - when: feature_must_gather_api|bool
    block:
    - name: "Setup must-gather-api service"
      k8s:
        state: "{{ must_gather_api_state }}"
        definition: "{{ lookup('template', 'must-gather-api/service-must-gather-api.yml.j2') }}"

    - name: "Setup must-gather-api deployment"
      k8s:
        state: "{{ must_gather_api_state }}"
        definition: "{{ lookup('template', 'must-gather-api/deployment-must-gather-api.yml.j2') }}"

  - when: feature_ui_plugin|bool and not k8s_cluster|bool
    block:

    - name: "Setup UI plugin configmap"
      k8s:
        state: "{{ ui_plugin_state }}"
        definition: "{{ lookup('template', 'ui-plugin/configmap-ui-plugin.yml.j2') }}"

    - name: "Setup UI plugin service"
      k8s:
        state: "{{ ui_plugin_state }}"
        definition: "{{ lookup('template', 'ui-plugin/service-ui-plugin.yml.j2') }}"

    - name: "Setup UI plugin deployment"
      k8s:
        state: "{{ ui_plugin_state }}"
        definition: "{{ lookup('template', 'ui-plugin/deployment-ui-plugin.yml.j2') }}"

    - name: "Setup console plugin"
      k8s:
        state: "{{ ui_plugin_state }}"
        definition: "{{ lookup('template', 'ui-plugin/console-plugin.yml.j2') }}"

    - name: "Get cluster console information"
      k8s_info:
        api_version: operator.openshift.io/v1
        kind: console
        name: cluster
      register: console_operator

    - name: "Set console_plugins variable"
      set_fact:
        console_plugins: "{{ console_operator['resources'][0]['spec']['plugins'] | default([]) }}"

    - name: "Enable console plugin"
      k8s:
        api_version: operator.openshift.io/v1
        kind: console
        name: cluster
        state: present
        definition:
          spec:
            plugins: "{{ console_plugins + [ui_plugin_console_name] }}"
      when: ui_plugin_console_name not in console_plugins

  - when: not feature_ui_plugin|bool
    name: "Cleanup {{ ui_plugin_service_name }} if disabled"
    include_tasks: cleanup.yml
    loop: "{{ forklift_resources }}"
    loop_control:
      loop_var: resource_kind
    vars:
      feature_label: "{{ ui_plugin_service_name }}"

  - when: not feature_validation|bool
    name: "Cleanup {{ validation_service_name }} if disabled"
    include_tasks: cleanup.yml
    loop: "{{ forklift_resources }}"
    loop_control:
      loop_var: resource_kind
    vars:
      feature_label: "{{ validation_service_name }}"

  - when: not feature_must_gather_api|bool
    name: "Cleanup {{ must_gather_api_service_name }} if disabled"
    include_tasks: cleanup.yml
    loop: "{{ forklift_resources }}"
    loop_control:
      loop_var: resource_kind
    vars:
      feature_label: "{{ must_gather_api_service_name }}"
