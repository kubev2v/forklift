# Network policies for virt-v2v conversion workloads
# Applies to virt-v2v pods used by VMware and OVA migrations for guest conversion
#
# NFS Configuration:
# - Default: NFSv4 (port 2049 TCP/UDP only)
# - NFSv3: Set nfs_v3_support=true to enable ports 111 (rpcbind) and 20048 (mountd)
# - Note: NFSv3 mountd port may vary depending on server configuration
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: forklift-virt-v2v-policy
  namespace: {{ app_namespace }}
  labels:
    app: {{ app_name }}
spec:
  podSelector:
    matchLabels:
      forklift.app: virt-v2v
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow controller communication
  - from:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # all ports allowed (ports omitted)
  egress:
  # Allow communication with controller
  - to:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # Allow external provider access (vSphere + OVA)
  - ports:
    - protocol: TCP
      port: 80    # HTTP (Certificate validation, CRL, package repos)
    - protocol: TCP
      port: 443   # HTTPS (vSphere API + OVA downloads)
    - protocol: TCP
      port: 8443  # vSphere API HTTPS Development
    - protocol: TCP
      port: 902   # vSphere NFC storage transfer
    - protocol: TCP
      port: 8080  # OVA downloads HTTP
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: forklift-ova-server-policy
  namespace: {{ app_namespace }}
  labels:
    app: {{ app_name }}
spec:
  podSelector:
    matchLabels:
      provider: ova-provider
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow controller communication
  - from:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # Allow OVA file access from migration workloads
  - from:
    - podSelector:
        matchLabels:
          forklift.app: migration-workload
    ports:
    - protocol: TCP
      port: 8080  # OVA server HTTP port
  egress:
  # Allow communication with controller
  - to:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # OVA server serves files from NFS storage, no external HTTP/HTTPS needed
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow NFS storage access
  # NFSv4: Port 2049 TCP/UDP (default configuration)
  # NFSv3: Add ports 111 (rpcbind) and mountd if needed
  - ports:
    - protocol: TCP
      port: 2049  # NFS (NFSv4/NFSv3 data)
    - protocol: UDP
      port: 2049  # NFS (NFSv4/NFSv3 data)
{% if nfs_v3_support|default(false)|bool %}
    # NFSv3 additional ports (enable with nfs_v3_support: true)
    - protocol: TCP
      port: 111   # rpcbind
    - protocol: UDP
      port: 111   # rpcbind
    - protocol: TCP
      port: 20048 # mountd (default port, may vary)
    - protocol: UDP
      port: 20048 # mountd (default port, may vary)
{% endif %}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: forklift-ovirt-populator-policy
  namespace: {{ app_namespace }}
  labels:
    app: {{ app_name }}
spec:
  podSelector:
    matchLabels:
      populator: ovirt
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow controller communication
  - from:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # Allow monitoring access to metrics
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: openshift-monitoring
    ports:
    - protocol: TCP
      port: 8080  # oVirt populator metrics
  egress:
  # Allow communication with controller
  - to:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # Allow oVirt API and imageio access
  - ports:
    - protocol: TCP
      port: 443     # oVirt Engine API + modern proxy transfers
    - protocol: TCP
      port: 54323   # oVirt imageio-daemon (direct streaming from hosts)
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: forklift-openstack-populator-policy
  namespace: {{ app_namespace }}
  labels:
    app: {{ app_name }}
spec:
  podSelector:
    matchLabels:
      populator: openstack
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow controller communication
  - from:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # Allow monitoring access to metrics
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: openshift-monitoring
    ports:
    - protocol: TCP
      port: 8081  # OpenStack populator metrics
  egress:
  # Allow communication with controller
  - to:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # Allow minimal OpenStack access - most restrictive approach
  - ports:
    - protocol: TCP
      port: 443   # HTTPS for OpenStack APIs
    - protocol: UDP
      port: 53    # DNS resolution
    - protocol: TCP
      port: 53    # DNS resolution
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: forklift-vsphere-xcopy-populator-policy
  namespace: {{ app_namespace }}
  labels:
    app: {{ app_name }}
spec:
  podSelector:
    matchLabels:
      populator: vsphere-xcopy
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow controller communication
  - from:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # Allow monitoring access to metrics
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: openshift-monitoring
    ports:
    - protocol: TCP
      port: 8082  # vSphere Xcopy populator metrics
  egress:
  # Allow communication with controller
  - to:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  # Allow vSphere API and NFC access
  - ports:
    - protocol: TCP
      port: 443   # vSphere API
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
# Image Converter Policy
# 
# The image converter is used during OpenStack migrations (PhaseConvertOpenstackSnapshot)
# to convert disk formats to RAW format required by KubeVirt. It performs local disk
# format conversion using qemu-img on locally mounted PVCs without requiring external
# network access.
#
# This policy is required when:
# - OpenStack migrations are performed
# - Source disks are in non-RAW formats (qcow2, vmdk, etc.)
# - Disk format conversion is needed before VM creation
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: forklift-image-converter-policy
  namespace: {{ app_namespace }}
  labels:
    app: {{ app_name }}
spec:
  podSelector:
    matchLabels:
      forklift.app: image-converter
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow controller communication
  - from:
    - podSelector:
        matchLabels:
          control-plane: controller-manager
    # All ports allowed (ports omitted)
  egress:
  # Image converter works with locally mounted PVCs - no network storage access needed
  # No external egress required
