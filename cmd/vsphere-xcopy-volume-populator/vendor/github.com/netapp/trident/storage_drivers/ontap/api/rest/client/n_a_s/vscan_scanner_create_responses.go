// Code generated by go-swagger; DO NOT EDIT.

package n_a_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// VscanScannerCreateReader is a Reader for the VscanScannerCreate structure.
type VscanScannerCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VscanScannerCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewVscanScannerCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVscanScannerCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVscanScannerCreateCreated creates a VscanScannerCreateCreated with default headers values
func NewVscanScannerCreateCreated() *VscanScannerCreateCreated {
	return &VscanScannerCreateCreated{}
}

/*
VscanScannerCreateCreated describes a response with status code 201, with default header values.

Created
*/
type VscanScannerCreateCreated struct {

	/* Useful for tracking the resource location
	 */
	Location string

	Payload *models.VscanScannerPoolResponse
}

// IsSuccess returns true when this vscan scanner create created response has a 2xx status code
func (o *VscanScannerCreateCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this vscan scanner create created response has a 3xx status code
func (o *VscanScannerCreateCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this vscan scanner create created response has a 4xx status code
func (o *VscanScannerCreateCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this vscan scanner create created response has a 5xx status code
func (o *VscanScannerCreateCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this vscan scanner create created response a status code equal to that given
func (o *VscanScannerCreateCreated) IsCode(code int) bool {
	return code == 201
}

func (o *VscanScannerCreateCreated) Error() string {
	return fmt.Sprintf("[POST /protocols/vscan/{svm.uuid}/scanner-pools][%d] vscanScannerCreateCreated  %+v", 201, o.Payload)
}

func (o *VscanScannerCreateCreated) String() string {
	return fmt.Sprintf("[POST /protocols/vscan/{svm.uuid}/scanner-pools][%d] vscanScannerCreateCreated  %+v", 201, o.Payload)
}

func (o *VscanScannerCreateCreated) GetPayload() *models.VscanScannerPoolResponse {
	return o.Payload
}

func (o *VscanScannerCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	o.Payload = new(models.VscanScannerPoolResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVscanScannerCreateDefault creates a VscanScannerCreateDefault with default headers values
func NewVscanScannerCreateDefault(code int) *VscanScannerCreateDefault {
	return &VscanScannerCreateDefault{
		_statusCode: code,
	}
}

/*
	VscanScannerCreateDefault describes a response with status code -1, with default header values.

	ONTAP Error Response Codes

| Error Code | Description |
| ---------- | ----------- |
| 10027086   | The specified list of servers contain one or more entries that cannot be resolved
| 10027258   | The specified cluster_name does not exist
| 10027256   | The specified cluster_uuid does not exist
| 10027257   | The specified cluster_name and cluster_uuid are valid but belong to different clusters
| 10027248   | Scanner-pool created successfully but failed to activate
| 10027107   | The list of privileged users or list of servers specified is empty
| 10027108   | The list of privileged users specified contains an invalid entry
| 10027063   | Attempting to modify a scanner-pool on an administrative SVM with a data SVM
*/
type VscanScannerCreateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the vscan scanner create default response
func (o *VscanScannerCreateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this vscan scanner create default response has a 2xx status code
func (o *VscanScannerCreateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this vscan scanner create default response has a 3xx status code
func (o *VscanScannerCreateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this vscan scanner create default response has a 4xx status code
func (o *VscanScannerCreateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this vscan scanner create default response has a 5xx status code
func (o *VscanScannerCreateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this vscan scanner create default response a status code equal to that given
func (o *VscanScannerCreateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *VscanScannerCreateDefault) Error() string {
	return fmt.Sprintf("[POST /protocols/vscan/{svm.uuid}/scanner-pools][%d] vscan_scanner_create default  %+v", o._statusCode, o.Payload)
}

func (o *VscanScannerCreateDefault) String() string {
	return fmt.Sprintf("[POST /protocols/vscan/{svm.uuid}/scanner-pools][%d] vscan_scanner_create default  %+v", o._statusCode, o.Payload)
}

func (o *VscanScannerCreateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *VscanScannerCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
