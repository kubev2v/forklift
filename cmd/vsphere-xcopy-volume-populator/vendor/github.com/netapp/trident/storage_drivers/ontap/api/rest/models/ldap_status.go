// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LdapStatus ldap status
//
// swagger:model ldap_status
type LdapStatus struct {

	// Code corresponding to the status message.
	//
	// Example: 65537300
	Code *int64 `json:"code,omitempty"`

	// ldap status inline dn message
	LdapStatusInlineDnMessage []*string `json:"dn_message,omitempty"`

	// Provides additional details on the status of the LDAP service.
	//
	Message *string `json:"message,omitempty"`

	// Specifies the status of the LDAP service.
	//
	// Enum: [up down]
	State *string `json:"state,omitempty"`
}

// Validate validates this ldap status
func (m *LdapStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ldapStatusTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["up","down"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ldapStatusTypeStatePropEnum = append(ldapStatusTypeStatePropEnum, v)
	}
}

const (

	// BEGIN DEBUGGING
	// ldap_status
	// LdapStatus
	// state
	// State
	// up
	// END DEBUGGING
	// LdapStatusStateUp captures enum value "up"
	LdapStatusStateUp string = "up"

	// BEGIN DEBUGGING
	// ldap_status
	// LdapStatus
	// state
	// State
	// down
	// END DEBUGGING
	// LdapStatusStateDown captures enum value "down"
	LdapStatusStateDown string = "down"
)

// prop value enum
func (m *LdapStatus) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, ldapStatusTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *LdapStatus) validateState(formats strfmt.Registry) error {
	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", *m.State); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this ldap status based on context it is used
func (m *LdapStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LdapStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LdapStatus) UnmarshalBinary(b []byte) error {
	var res LdapStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
