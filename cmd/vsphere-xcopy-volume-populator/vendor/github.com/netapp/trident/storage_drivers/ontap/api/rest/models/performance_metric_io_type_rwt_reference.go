// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PerformanceMetricIoTypeRwtReference Indicates the type of I/O operation that can be associated with the type of performance metric. I/O operations can be "total", "read", "write". An I/O operation of type "total" is an aggregation of "read" and "write" for any type of performance metric.
//
// swagger:model performance_metric_io_type_rwt_reference
type PerformanceMetricIoTypeRwtReference struct {

	// Performance metric for read I/O operations.
	// Example: 200
	Read *int64 `json:"read,omitempty"`

	// Performance metric aggregated over all types of I/O operations.
	// Example: 1000
	Total *int64 `json:"total,omitempty"`

	// Peformance metric for write I/O operations.
	// Example: 100
	Write *int64 `json:"write,omitempty"`
}

// Validate validates this performance metric io type rwt reference
func (m *PerformanceMetricIoTypeRwtReference) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this performance metric io type rwt reference based on context it is used
func (m *PerformanceMetricIoTypeRwtReference) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PerformanceMetricIoTypeRwtReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PerformanceMetricIoTypeRwtReference) UnmarshalBinary(b []byte) error {
	var res PerformanceMetricIoTypeRwtReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
