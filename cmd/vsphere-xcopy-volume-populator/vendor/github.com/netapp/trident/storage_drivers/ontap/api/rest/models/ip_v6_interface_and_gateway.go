// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IPV6InterfaceAndGateway Object to setup an interface along with its default router.
//
// swagger:model ipv6_interface_and_gateway
type IPV6InterfaceAndGateway struct {

	// IPv6 address
	// Example: fd20:8b1e:b255:5011:10:141:4:97
	Address *string `json:"address,omitempty"`

	// The IPv6 address of the default router.
	// Example: fd20:8b1e:b255:5011:10::1
	Gateway *string `json:"gateway,omitempty"`

	// The IPv6 netmask/prefix length. The default value is 64 with a valid range of 1 to 127.
	// Example: 64
	Netmask *int64 `json:"netmask,omitempty"`
}

// Validate validates this ipv6 interface and gateway
func (m *IPV6InterfaceAndGateway) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ipv6 interface and gateway based on context it is used
func (m *IPV6InterfaceAndGateway) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IPV6InterfaceAndGateway) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPV6InterfaceAndGateway) UnmarshalBinary(b []byte) error {
	var res IPV6InterfaceAndGateway
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
